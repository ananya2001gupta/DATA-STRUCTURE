//" Given a sorted list of integers, find the position of first occurrence of a given number K in the list in O(log n) time. "//

#include<iostream>
#include<cstdio>
#include<cmath>
using namespace std;
int getFirstOccurrence(int A[], int n, int k) {
   int left = 0, right = n - 1;
   while (left <= right) {
       int mid = left + (right - left) / 2;
       if (A[mid] == k) {
           if (mid - 1 >= left && A[mid - 1] == k)
               right = mid - 1;
           else
               return mid;
       } else if (A[mid] < k)
           left = mid + 1;
       else
           right = mid - 1;
   }
   return -1;
}
int main()
{
  int n,k,t;
  cin>>t;
  while(t--)
  {
    cin>>n>>k;
    int arr[n];
    for(int i=0;i<n;i++)
      cin>>arr[i];
    int p=getFirstOccurrence(arr,n,k);
    cout<<p<<endl;
  }
   return 0;
}

//" 
Input:
2
4 1
1 2 2 5
7 4
1 2 3 4 5 6 7
Expected Output"
0
3
"//
